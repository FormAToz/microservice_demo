version: '2.1'

services:
  database:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "fstock_dev"
    volumes:
      - ./V1_0_0__init_tables.sql:/docker-entrypoint-initdb.d/1-V1_0_0__init_tables.sql
      - ./V1_0_1__add_data.sql:/docker-entrypoint-initdb.d/2-V1_0_1__add_data.sql
    networks:
      backend:
        aliases:
          - "database"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  config-server:
    image: config-server:latest
    container_name: config-server
    ports:
      - "8071:8071"
    networks:
      backend:
        aliases:
          - "config-server"

  license-service:
    image: license-service:latest
    container_name: license-service
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: dev
      SPRING_CONFIG_IMPORT: optional:configserver:http://config-server:8071
    depends_on:
      config-server:
        condition: service_started
    networks:
      backend:
        aliases:
          - "license-service"

  eureka-server:
    image: eureka-server:latest
    container_name: eureka-server
    ports:
      - "8070:8070"
    environment:
      SPRING_PROFILES_ACTIVE: dev
      SPRING_CONFIG_IMPORT: optional:configserver:http://config-server:8071
    depends_on:
      config-server:
        condition: service_started
    networks:
      backend:
        aliases:
          - "eureka-server"

networks:
  backend:
    driver: bridge
